
// This file has been generated by the GUI designer. Do not modify.
namespace Glippy.Application
{
	internal partial class PreferencesWindow
	{
		private global::Gtk.VBox vbox2;
		private global::Gtk.Notebook notebook;
		private global::Gtk.VBox vbox3;
		private global::Gtk.CheckButton startAtLogin;
		private global::Gtk.CheckButton keyboardClipboard;
		private global::Gtk.CheckButton images;
		private global::Gtk.CheckButton supportedFilesAsImages;
		private global::Gtk.CheckButton mouseClipboard;
		private global::Gtk.CheckButton synchronizeClipboards;
		private global::Gtk.CheckButton saveHistoryOnExit;
		private global::Gtk.CheckButton pasteItemContentOnSelection;
		private global::Gtk.Label labelBasic;
		private global::Gtk.VBox vbox9;
		private global::Gtk.HBox hbox7;
		private global::Gtk.VBox vbox10;
		private global::Gtk.Label labelClipboardSize;
		private global::Gtk.Label labelItemLength;
		private global::Gtk.VBox vbox11;
		private global::Gtk.SpinButton size;
		private global::Gtk.SpinButton labelLength;
		private global::Gtk.CheckButton reverseOrder;
		private global::Gtk.CheckButton pasteIcon;
		private global::Gtk.CheckButton showAbout;
		private global::Gtk.CheckButton showEditClipboard;
		private global::Gtk.CheckButton showQuit;
		private global::Gtk.Label labelInterface;
		private global::Gtk.VBox vbox4;
		private global::Gtk.CheckButton menuHotkey;
		private global::Gtk.HBox hbox5;
		private global::Gtk.Entry menuHotkeyText;
		private global::Gtk.Button buttonGrabMenuHotkey;
		private global::Gtk.Fixed fixed2;
		private global::Gtk.HSeparator hseparator1;
		private global::Gtk.CheckButton copyMouseHotkey;
		private global::Gtk.HBox hbox6;
		private global::Gtk.Entry copyMouseHotkeyText;
		private global::Gtk.Button buttonGrabCopyMouseHotkey;
		private global::Gtk.Label labelHotkeys;
		private global::Gtk.VBox vbox1;
		private global::Gtk.Alignment alignment1;
		private global::Gtk.VBox vbox5;
		private global::Gtk.Label labelPlugins1;
		private global::Gtk.Label labelPlugins2;
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		private global::Gtk.TreeView treeviewPlugins;
		private global::Gtk.Label labelPlugins;
		private global::Gtk.HBox hbox1;
		private global::Gtk.Alignment alignment6;
		private global::Gtk.Alignment alignment5;
		private global::Gtk.Alignment alignment4;
		private global::Gtk.Fixed fixed1;
		private global::Gtk.Button buttonClose;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Glippy.Application.PreferencesWindow
			this.Name = "Glippy.Application.PreferencesWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("Glippy Preferences");
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.BorderWidth = ((uint)(9));
			// Container child Glippy.Application.PreferencesWindow.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.notebook = new global::Gtk.Notebook ();
			this.notebook.CanFocus = true;
			this.notebook.Name = "notebook";
			this.notebook.CurrentPage = 1;
			this.notebook.Scrollable = true;
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 8;
			this.vbox3.BorderWidth = ((uint)(12));
			// Container child vbox3.Gtk.Box+BoxChild
			this.startAtLogin = new global::Gtk.CheckButton ();
			this.startAtLogin.CanFocus = true;
			this.startAtLogin.Name = "startAtLogin";
			this.startAtLogin.Label = global::Mono.Unix.Catalog.GetString ("Start Glippy at login");
			this.startAtLogin.DrawIndicator = true;
			this.startAtLogin.UseUnderline = true;
			this.startAtLogin.BorderWidth = ((uint)(5));
			this.vbox3.Add (this.startAtLogin);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.startAtLogin]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.keyboardClipboard = new global::Gtk.CheckButton ();
			this.keyboardClipboard.CanFocus = true;
			this.keyboardClipboard.Name = "keyboardClipboard";
			this.keyboardClipboard.Label = global::Mono.Unix.Catalog.GetString ("Enable keyboard clipboard (Ctrl+C/Ctrl+V)");
			this.keyboardClipboard.DrawIndicator = true;
			this.keyboardClipboard.UseUnderline = true;
			this.keyboardClipboard.BorderWidth = ((uint)(5));
			this.vbox3.Add (this.keyboardClipboard);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.keyboardClipboard]));
			w2.Position = 1;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.images = new global::Gtk.CheckButton ();
			this.images.Sensitive = false;
			this.images.CanFocus = true;
			this.images.Name = "images";
			this.images.Label = global::Mono.Unix.Catalog.GetString ("Store images");
			this.images.DrawIndicator = true;
			this.images.UseUnderline = true;
			this.images.BorderWidth = ((uint)(5));
			this.vbox3.Add (this.images);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.images]));
			w3.Position = 2;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.supportedFilesAsImages = new global::Gtk.CheckButton ();
			this.supportedFilesAsImages.Sensitive = false;
			this.supportedFilesAsImages.CanFocus = true;
			this.supportedFilesAsImages.Name = "supportedFilesAsImages";
			this.supportedFilesAsImages.Label = global::Mono.Unix.Catalog.GetString ("Store supported files as images");
			this.supportedFilesAsImages.DrawIndicator = true;
			this.supportedFilesAsImages.UseUnderline = true;
			this.supportedFilesAsImages.BorderWidth = ((uint)(5));
			this.vbox3.Add (this.supportedFilesAsImages);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.supportedFilesAsImages]));
			w4.Position = 3;
			w4.Expand = false;
			w4.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.mouseClipboard = new global::Gtk.CheckButton ();
			this.mouseClipboard.CanFocus = true;
			this.mouseClipboard.Name = "mouseClipboard";
			this.mouseClipboard.Label = global::Mono.Unix.Catalog.GetString ("Enable mouse clipboard (selection/middle click)");
			this.mouseClipboard.DrawIndicator = true;
			this.mouseClipboard.UseUnderline = true;
			this.mouseClipboard.BorderWidth = ((uint)(5));
			this.vbox3.Add (this.mouseClipboard);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.mouseClipboard]));
			w5.Position = 4;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.synchronizeClipboards = new global::Gtk.CheckButton ();
			this.synchronizeClipboards.Sensitive = false;
			this.synchronizeClipboards.CanFocus = true;
			this.synchronizeClipboards.Name = "synchronizeClipboards";
			this.synchronizeClipboards.Label = global::Mono.Unix.Catalog.GetString ("Synchronize clipboards");
			this.synchronizeClipboards.DrawIndicator = true;
			this.synchronizeClipboards.UseUnderline = true;
			this.synchronizeClipboards.BorderWidth = ((uint)(5));
			this.vbox3.Add (this.synchronizeClipboards);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.synchronizeClipboards]));
			w6.Position = 5;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.saveHistoryOnExit = new global::Gtk.CheckButton ();
			this.saveHistoryOnExit.CanFocus = true;
			this.saveHistoryOnExit.Name = "saveHistoryOnExit";
			this.saveHistoryOnExit.Label = global::Mono.Unix.Catalog.GetString ("Save history on exit");
			this.saveHistoryOnExit.DrawIndicator = true;
			this.saveHistoryOnExit.UseUnderline = true;
			this.saveHistoryOnExit.BorderWidth = ((uint)(5));
			this.vbox3.Add (this.saveHistoryOnExit);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.saveHistoryOnExit]));
			w7.Position = 6;
			w7.Expand = false;
			w7.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.pasteItemContentOnSelection = new global::Gtk.CheckButton ();
			this.pasteItemContentOnSelection.CanFocus = true;
			this.pasteItemContentOnSelection.Name = "pasteItemContentOnSelection";
			this.pasteItemContentOnSelection.Label = global::Mono.Unix.Catalog.GetString ("Paste item content on selection");
			this.pasteItemContentOnSelection.Active = true;
			this.pasteItemContentOnSelection.DrawIndicator = true;
			this.pasteItemContentOnSelection.UseUnderline = true;
			this.pasteItemContentOnSelection.BorderWidth = ((uint)(5));
			this.vbox3.Add (this.pasteItemContentOnSelection);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.pasteItemContentOnSelection]));
			w8.Position = 7;
			w8.Expand = false;
			w8.Fill = false;
			this.notebook.Add (this.vbox3);
			// Notebook tab
			this.labelBasic = new global::Gtk.Label ();
			this.labelBasic.Name = "labelBasic";
			this.labelBasic.LabelProp = global::Mono.Unix.Catalog.GetString ("_Basic");
			this.labelBasic.UseUnderline = true;
			this.notebook.SetTabLabel (this.vbox3, this.labelBasic);
			this.labelBasic.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.vbox9 = new global::Gtk.VBox ();
			this.vbox9.Name = "vbox9";
			this.vbox9.Spacing = 8;
			this.vbox9.BorderWidth = ((uint)(12));
			// Container child vbox9.Gtk.Box+BoxChild
			this.hbox7 = new global::Gtk.HBox ();
			this.hbox7.Name = "hbox7";
			this.hbox7.Spacing = 6;
			this.hbox7.BorderWidth = ((uint)(3));
			// Container child hbox7.Gtk.Box+BoxChild
			this.vbox10 = new global::Gtk.VBox ();
			this.vbox10.Name = "vbox10";
			this.vbox10.Spacing = 6;
			// Container child vbox10.Gtk.Box+BoxChild
			this.labelClipboardSize = new global::Gtk.Label ();
			this.labelClipboardSize.Name = "labelClipboardSize";
			this.labelClipboardSize.Xalign = 0F;
			this.labelClipboardSize.LabelProp = global::Mono.Unix.Catalog.GetString ("Clipboard size:");
			this.vbox10.Add (this.labelClipboardSize);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox10 [this.labelClipboardSize]));
			w10.Position = 0;
			w10.Expand = false;
			w10.Fill = false;
			w10.Padding = ((uint)(5));
			// Container child vbox10.Gtk.Box+BoxChild
			this.labelItemLength = new global::Gtk.Label ();
			this.labelItemLength.Name = "labelItemLength";
			this.labelItemLength.Xalign = 0F;
			this.labelItemLength.LabelProp = global::Mono.Unix.Catalog.GetString ("Label length:");
			this.vbox10.Add (this.labelItemLength);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox10 [this.labelItemLength]));
			w11.Position = 1;
			w11.Expand = false;
			w11.Fill = false;
			w11.Padding = ((uint)(5));
			this.hbox7.Add (this.vbox10);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.hbox7 [this.vbox10]));
			w12.Position = 0;
			w12.Expand = false;
			w12.Fill = false;
			// Container child hbox7.Gtk.Box+BoxChild
			this.vbox11 = new global::Gtk.VBox ();
			this.vbox11.Name = "vbox11";
			this.vbox11.Spacing = 6;
			// Container child vbox11.Gtk.Box+BoxChild
			this.size = new global::Gtk.SpinButton (5, 100, 1);
			this.size.CanFocus = true;
			this.size.Name = "size";
			this.size.Adjustment.PageIncrement = 5;
			this.size.ClimbRate = 1;
			this.size.Numeric = true;
			this.size.Value = 5;
			this.vbox11.Add (this.size);
			global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vbox11 [this.size]));
			w13.Position = 0;
			w13.Expand = false;
			w13.Fill = false;
			// Container child vbox11.Gtk.Box+BoxChild
			this.labelLength = new global::Gtk.SpinButton (5, 100, 1);
			this.labelLength.CanFocus = true;
			this.labelLength.Name = "labelLength";
			this.labelLength.Adjustment.PageIncrement = 5;
			this.labelLength.ClimbRate = 1;
			this.labelLength.Numeric = true;
			this.labelLength.Value = 5;
			this.vbox11.Add (this.labelLength);
			global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.vbox11 [this.labelLength]));
			w14.Position = 1;
			w14.Expand = false;
			w14.Fill = false;
			this.hbox7.Add (this.vbox11);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.hbox7 [this.vbox11]));
			w15.PackType = ((global::Gtk.PackType)(1));
			w15.Position = 1;
			w15.Expand = false;
			w15.Fill = false;
			this.vbox9.Add (this.hbox7);
			global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.vbox9 [this.hbox7]));
			w16.Position = 0;
			w16.Expand = false;
			w16.Fill = false;
			// Container child vbox9.Gtk.Box+BoxChild
			this.reverseOrder = new global::Gtk.CheckButton ();
			this.reverseOrder.CanFocus = true;
			this.reverseOrder.Name = "reverseOrder";
			this.reverseOrder.Label = global::Mono.Unix.Catalog.GetString ("Reverse order of items");
			this.reverseOrder.DrawIndicator = true;
			this.reverseOrder.UseUnderline = true;
			this.reverseOrder.BorderWidth = ((uint)(5));
			this.vbox9.Add (this.reverseOrder);
			global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.vbox9 [this.reverseOrder]));
			w17.Position = 1;
			w17.Expand = false;
			w17.Fill = false;
			// Container child vbox9.Gtk.Box+BoxChild
			this.pasteIcon = new global::Gtk.CheckButton ();
			this.pasteIcon.CanFocus = true;
			this.pasteIcon.Name = "pasteIcon";
			this.pasteIcon.Label = global::Mono.Unix.Catalog.GetString ("Use paste icon instead default (needs restart)");
			this.pasteIcon.DrawIndicator = true;
			this.pasteIcon.UseUnderline = true;
			this.pasteIcon.BorderWidth = ((uint)(5));
			this.vbox9.Add (this.pasteIcon);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.vbox9 [this.pasteIcon]));
			w18.Position = 2;
			w18.Expand = false;
			w18.Fill = false;
			// Container child vbox9.Gtk.Box+BoxChild
			this.showAbout = new global::Gtk.CheckButton ();
			this.showAbout.CanFocus = true;
			this.showAbout.Name = "showAbout";
			this.showAbout.Label = global::Mono.Unix.Catalog.GetString ("Show 'About' menu entry");
			this.showAbout.DrawIndicator = true;
			this.showAbout.UseUnderline = true;
			this.showAbout.BorderWidth = ((uint)(5));
			this.vbox9.Add (this.showAbout);
			global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.vbox9 [this.showAbout]));
			w19.Position = 3;
			w19.Expand = false;
			w19.Fill = false;
			// Container child vbox9.Gtk.Box+BoxChild
			this.showEditClipboard = new global::Gtk.CheckButton ();
			this.showEditClipboard.CanFocus = true;
			this.showEditClipboard.Name = "showEditClipboard";
			this.showEditClipboard.Label = global::Mono.Unix.Catalog.GetString ("Show 'Edit clipboard' menu entry");
			this.showEditClipboard.DrawIndicator = true;
			this.showEditClipboard.UseUnderline = true;
			this.showEditClipboard.BorderWidth = ((uint)(5));
			this.vbox9.Add (this.showEditClipboard);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.vbox9 [this.showEditClipboard]));
			w20.Position = 4;
			w20.Expand = false;
			w20.Fill = false;
			// Container child vbox9.Gtk.Box+BoxChild
			this.showQuit = new global::Gtk.CheckButton ();
			this.showQuit.CanFocus = true;
			this.showQuit.Name = "showQuit";
			this.showQuit.Label = global::Mono.Unix.Catalog.GetString ("Show 'Quit' menu entry");
			this.showQuit.DrawIndicator = true;
			this.showQuit.UseUnderline = true;
			this.showQuit.BorderWidth = ((uint)(5));
			this.vbox9.Add (this.showQuit);
			global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.vbox9 [this.showQuit]));
			w21.Position = 5;
			w21.Expand = false;
			w21.Fill = false;
			this.notebook.Add (this.vbox9);
			global::Gtk.Notebook.NotebookChild w22 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.vbox9]));
			w22.Position = 1;
			// Notebook tab
			this.labelInterface = new global::Gtk.Label ();
			this.labelInterface.Name = "labelInterface";
			this.labelInterface.LabelProp = global::Mono.Unix.Catalog.GetString ("_Interface");
			this.labelInterface.UseUnderline = true;
			this.notebook.SetTabLabel (this.vbox9, this.labelInterface);
			this.labelInterface.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.vbox4 = new global::Gtk.VBox ();
			this.vbox4.Name = "vbox4";
			this.vbox4.Spacing = 8;
			this.vbox4.BorderWidth = ((uint)(12));
			// Container child vbox4.Gtk.Box+BoxChild
			this.menuHotkey = new global::Gtk.CheckButton ();
			this.menuHotkey.CanFocus = true;
			this.menuHotkey.Name = "menuHotkey";
			this.menuHotkey.Label = global::Mono.Unix.Catalog.GetString ("Menu hotkey");
			this.menuHotkey.DrawIndicator = true;
			this.menuHotkey.UseUnderline = true;
			this.menuHotkey.BorderWidth = ((uint)(5));
			this.vbox4.Add (this.menuHotkey);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.menuHotkey]));
			w23.Position = 0;
			w23.Expand = false;
			w23.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.hbox5 = new global::Gtk.HBox ();
			this.hbox5.Name = "hbox5";
			this.hbox5.Spacing = 12;
			// Container child hbox5.Gtk.Box+BoxChild
			this.menuHotkeyText = new global::Gtk.Entry ();
			this.menuHotkeyText.Sensitive = false;
			this.menuHotkeyText.CanFocus = true;
			this.menuHotkeyText.Name = "menuHotkeyText";
			this.menuHotkeyText.IsEditable = false;
			this.menuHotkeyText.InvisibleChar = '•';
			this.hbox5.Add (this.menuHotkeyText);
			global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.hbox5 [this.menuHotkeyText]));
			w24.Position = 0;
			w24.Padding = ((uint)(8));
			// Container child hbox5.Gtk.Box+BoxChild
			this.buttonGrabMenuHotkey = new global::Gtk.Button ();
			this.buttonGrabMenuHotkey.CanFocus = true;
			this.buttonGrabMenuHotkey.Name = "buttonGrabMenuHotkey";
			this.buttonGrabMenuHotkey.UseUnderline = true;
			this.buttonGrabMenuHotkey.Label = global::Mono.Unix.Catalog.GetString ("Grab");
			this.hbox5.Add (this.buttonGrabMenuHotkey);
			global::Gtk.Box.BoxChild w25 = ((global::Gtk.Box.BoxChild)(this.hbox5 [this.buttonGrabMenuHotkey]));
			w25.Position = 1;
			w25.Expand = false;
			w25.Fill = false;
			w25.Padding = ((uint)(6));
			this.vbox4.Add (this.hbox5);
			global::Gtk.Box.BoxChild w26 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.hbox5]));
			w26.Position = 1;
			w26.Expand = false;
			w26.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.fixed2 = new global::Gtk.Fixed ();
			this.fixed2.Name = "fixed2";
			this.fixed2.HasWindow = false;
			this.vbox4.Add (this.fixed2);
			global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.fixed2]));
			w27.Position = 2;
			w27.Expand = false;
			w27.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.vbox4.Add (this.hseparator1);
			global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.hseparator1]));
			w28.Position = 3;
			w28.Expand = false;
			w28.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.copyMouseHotkey = new global::Gtk.CheckButton ();
			this.copyMouseHotkey.CanFocus = true;
			this.copyMouseHotkey.Name = "copyMouseHotkey";
			this.copyMouseHotkey.Label = global::Mono.Unix.Catalog.GetString ("'Copy' hotkey for mouse clipboard");
			this.copyMouseHotkey.DrawIndicator = true;
			this.copyMouseHotkey.UseUnderline = true;
			this.copyMouseHotkey.BorderWidth = ((uint)(5));
			this.vbox4.Add (this.copyMouseHotkey);
			global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.copyMouseHotkey]));
			w29.Position = 4;
			w29.Expand = false;
			w29.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.hbox6 = new global::Gtk.HBox ();
			this.hbox6.Name = "hbox6";
			this.hbox6.Spacing = 12;
			// Container child hbox6.Gtk.Box+BoxChild
			this.copyMouseHotkeyText = new global::Gtk.Entry ();
			this.copyMouseHotkeyText.Sensitive = false;
			this.copyMouseHotkeyText.CanFocus = true;
			this.copyMouseHotkeyText.Name = "copyMouseHotkeyText";
			this.copyMouseHotkeyText.IsEditable = false;
			this.copyMouseHotkeyText.InvisibleChar = '•';
			this.hbox6.Add (this.copyMouseHotkeyText);
			global::Gtk.Box.BoxChild w30 = ((global::Gtk.Box.BoxChild)(this.hbox6 [this.copyMouseHotkeyText]));
			w30.Position = 0;
			w30.Padding = ((uint)(8));
			// Container child hbox6.Gtk.Box+BoxChild
			this.buttonGrabCopyMouseHotkey = new global::Gtk.Button ();
			this.buttonGrabCopyMouseHotkey.CanFocus = true;
			this.buttonGrabCopyMouseHotkey.Name = "buttonGrabCopyMouseHotkey";
			this.buttonGrabCopyMouseHotkey.UseUnderline = true;
			this.buttonGrabCopyMouseHotkey.Label = global::Mono.Unix.Catalog.GetString ("Grab");
			this.hbox6.Add (this.buttonGrabCopyMouseHotkey);
			global::Gtk.Box.BoxChild w31 = ((global::Gtk.Box.BoxChild)(this.hbox6 [this.buttonGrabCopyMouseHotkey]));
			w31.Position = 1;
			w31.Expand = false;
			w31.Fill = false;
			w31.Padding = ((uint)(6));
			this.vbox4.Add (this.hbox6);
			global::Gtk.Box.BoxChild w32 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.hbox6]));
			w32.Position = 5;
			w32.Expand = false;
			w32.Fill = false;
			this.notebook.Add (this.vbox4);
			global::Gtk.Notebook.NotebookChild w33 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.vbox4]));
			w33.Position = 2;
			// Notebook tab
			this.labelHotkeys = new global::Gtk.Label ();
			this.labelHotkeys.Name = "labelHotkeys";
			this.labelHotkeys.LabelProp = global::Mono.Unix.Catalog.GetString ("H_otkeys");
			this.labelHotkeys.UseUnderline = true;
			this.notebook.SetTabLabel (this.vbox4, this.labelHotkeys);
			this.labelHotkeys.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.alignment1 = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.alignment1.BorderWidth = ((uint)(12));
			// Container child alignment1.Gtk.Container+ContainerChild
			this.vbox5 = new global::Gtk.VBox ();
			this.vbox5.Name = "vbox5";
			this.vbox5.Spacing = 6;
			// Container child vbox5.Gtk.Box+BoxChild
			this.labelPlugins1 = new global::Gtk.Label ();
			this.labelPlugins1.Name = "labelPlugins1";
			this.labelPlugins1.Xalign = 0F;
			this.labelPlugins1.LabelProp = global::Mono.Unix.Catalog.GetString ("Here you can configure which plugins Glippy should use.");
			this.vbox5.Add (this.labelPlugins1);
			global::Gtk.Box.BoxChild w34 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.labelPlugins1]));
			w34.Position = 0;
			w34.Expand = false;
			w34.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.labelPlugins2 = new global::Gtk.Label ();
			this.labelPlugins2.Name = "labelPlugins2";
			this.labelPlugins2.Xalign = 0F;
			this.labelPlugins2.LabelProp = global::Mono.Unix.Catalog.GetString ("Keep in mind, that some of them may require restart.");
			this.vbox5.Add (this.labelPlugins2);
			global::Gtk.Box.BoxChild w35 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.labelPlugins2]));
			w35.Position = 1;
			w35.Expand = false;
			w35.Fill = false;
			this.alignment1.Add (this.vbox5);
			this.vbox1.Add (this.alignment1);
			global::Gtk.Box.BoxChild w37 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.alignment1]));
			w37.Position = 0;
			w37.Expand = false;
			w37.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.treeviewPlugins = new global::Gtk.TreeView ();
			this.treeviewPlugins.CanFocus = true;
			this.treeviewPlugins.Name = "treeviewPlugins";
			this.GtkScrolledWindow.Add (this.treeviewPlugins);
			this.vbox1.Add (this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w39 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.GtkScrolledWindow]));
			w39.Position = 1;
			this.notebook.Add (this.vbox1);
			global::Gtk.Notebook.NotebookChild w40 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.vbox1]));
			w40.Position = 3;
			// Notebook tab
			this.labelPlugins = new global::Gtk.Label ();
			this.labelPlugins.Name = "labelPlugins";
			this.labelPlugins.LabelProp = global::Mono.Unix.Catalog.GetString ("_Plugins");
			this.labelPlugins.UseUnderline = true;
			this.notebook.SetTabLabel (this.vbox1, this.labelPlugins);
			this.labelPlugins.ShowAll ();
			this.vbox2.Add (this.notebook);
			global::Gtk.Box.BoxChild w41 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.notebook]));
			w41.Position = 0;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Homogeneous = true;
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.alignment6 = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.alignment6.Name = "alignment6";
			this.hbox1.Add (this.alignment6);
			global::Gtk.Box.BoxChild w42 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.alignment6]));
			w42.Position = 0;
			// Container child hbox1.Gtk.Box+BoxChild
			this.alignment5 = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.alignment5.Name = "alignment5";
			this.hbox1.Add (this.alignment5);
			global::Gtk.Box.BoxChild w43 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.alignment5]));
			w43.Position = 1;
			// Container child hbox1.Gtk.Box+BoxChild
			this.alignment4 = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.alignment4.Name = "alignment4";
			// Container child alignment4.Gtk.Container+ContainerChild
			this.fixed1 = new global::Gtk.Fixed ();
			this.fixed1.HeightRequest = 26;
			this.fixed1.Name = "fixed1";
			this.fixed1.HasWindow = false;
			this.alignment4.Add (this.fixed1);
			this.hbox1.Add (this.alignment4);
			global::Gtk.Box.BoxChild w45 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.alignment4]));
			w45.Position = 2;
			// Container child hbox1.Gtk.Box+BoxChild
			this.buttonClose = new global::Gtk.Button ();
			this.buttonClose.CanDefault = true;
			this.buttonClose.CanFocus = true;
			this.buttonClose.Name = "buttonClose";
			this.buttonClose.UseUnderline = true;
			this.buttonClose.Label = global::Mono.Unix.Catalog.GetString ("_Close");
			this.hbox1.Add (this.buttonClose);
			global::Gtk.Box.BoxChild w46 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.buttonClose]));
			w46.PackType = ((global::Gtk.PackType)(1));
			w46.Position = 3;
			this.vbox2.Add (this.hbox1);
			global::Gtk.Box.BoxChild w47 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.hbox1]));
			w47.Position = 1;
			w47.Expand = false;
			w47.Fill = false;
			this.Add (this.vbox2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 376;
			this.DefaultHeight = 402;
			this.Show ();
			this.KeyPressEvent += new global::Gtk.KeyPressEventHandler (this.OnKeyPressEvent);
			this.startAtLogin.Toggled += new global::System.EventHandler (this.OnStartAtLoginToggled);
			this.keyboardClipboard.Toggled += new global::System.EventHandler (this.OnKeyboardClipboardToggled);
			this.images.Toggled += new global::System.EventHandler (this.OnImagesToggled);
			this.supportedFilesAsImages.Toggled += new global::System.EventHandler (this.OnSupportedFilesAsImagesToggled);
			this.mouseClipboard.Toggled += new global::System.EventHandler (this.OnMouseClipboardToggled);
			this.synchronizeClipboards.Toggled += new global::System.EventHandler (this.OnSynchronizeClipboardsToggled);
			this.saveHistoryOnExit.Toggled += new global::System.EventHandler (this.OnSaveHistoryOnExitToggled);
			this.pasteItemContentOnSelection.Toggled += new global::System.EventHandler (this.OnPasteitemContentOnSelectionToggled);
			this.size.ValueChanged += new global::System.EventHandler (this.OnSizeValueChanged);
			this.labelLength.ValueChanged += new global::System.EventHandler (this.OnLabelLengthValueChanged);
			this.reverseOrder.Toggled += new global::System.EventHandler (this.OnReverseOrderToggled);
			this.pasteIcon.Toggled += new global::System.EventHandler (this.OnPasteIconToggled);
			this.showAbout.Toggled += new global::System.EventHandler (this.OnShowAboutToggled);
			this.showEditClipboard.Toggled += new global::System.EventHandler (this.OnShowEditClipboardToggled);
			this.showQuit.Toggled += new global::System.EventHandler (this.OnShowQuitToggled);
			this.menuHotkey.Toggled += new global::System.EventHandler (this.OnMenuHotkeyToggled);
			this.buttonGrabMenuHotkey.Clicked += new global::System.EventHandler (this.OnButtonGrabMenuHotkeyClicked);
			this.copyMouseHotkey.Toggled += new global::System.EventHandler (this.OnCopyMouseHotkeyToggled);
			this.buttonGrabCopyMouseHotkey.Clicked += new global::System.EventHandler (this.OnButtonGrabCopyMouseHotkeyClicked);
			this.buttonClose.Clicked += new global::System.EventHandler (this.OnButtonCloseClicked);
		}
	}
}
